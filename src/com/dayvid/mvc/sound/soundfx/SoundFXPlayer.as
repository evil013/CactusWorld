package com.dayvid.mvc.sound.soundfx{	import com.dayvid.mvc.model.model_components.OptionsSettings;		import com.dayvid.mvc.sound.soundfx.sfx_components.SoundFX;		import flash.errors.IllegalOperationError;	import flash.media.Sound;
	import mvc_framework.sound.sfxfactory.SoundProjectFXCreator;
		public class SoundFXPlayer	{		private var model:OptionsSettings;		private var sfxCreator:SoundFXCreator;		private var sfxArray:Array = new Array();				public function SoundFXPlayer(aModel:OptionsSettings, aEmbedSound:Object)		{			model = aModel;			sfxCreator = new SoundProjectFXCreator(aModel, aEmbedSound);		}				public function createSFX(aType:uint):SoundFX 		{			return sfxCreator.createSFX(aType);		}				public function playSFX(aType:uint, thisObject:Object = null):void 		{			if (!model.sfxMute) 			{				if (thisObject != null && thisObject.cleanUp != null && thisObject.cleanUp == true)				{					var sfx:SoundFX = sfxCreator.createSFX(aType);					sfx.playSFX(thisObject);				}				else				{					if (sfxArray[aType] == undefined) 					{						sfxArray[aType] = sfxCreator.createSFX(aType);					}					sfxArray[aType].playSFX(thisObject);				}			}		}				public function stopSFX(aType:uint):void 		{			if (sfxArray[aType] != null) sfxArray[aType].stopSFX();		}				public function stopAllSFX():void 		{			sfxCreator.stopAllSFX();		}				public function changeVolume(aNum:Number):void 		{			var sfxArrayLength:uint = sfxArray.length;			if (sfxArrayLength > 0)			{				for (var i:uint = 0; i < sfxArrayLength; i++) {					if (sfxArray[i] != null) sfxArray[i].changeVolume(aNum);				}			}			sfxCreator.changeVolume(aNum);		}				public function setSoundTransform(aType:uint, aVol:Number = 1, aPan:Number = 0, aX:* = null):void 		{			sfxArray[aType].setSoundTransform(aVol, aPan, aX);		}				public function clearMainSoundFX():void		{			for (var i:uint = 0; i < sfxArray.length; i++) if (sfxArray[i] != undefined && sfxArray[i] != null) sfxArray[i].cleanUp();						sfxArray.length = 0;		}	}}