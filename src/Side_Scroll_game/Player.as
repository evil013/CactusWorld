package {	import flash.events.Event;	import flash.events.TimerEvent;	import flash.utils.Timer;	public class Player extends BoundaryObject	{		private var xMovement:Number;		public var isAttacking:Boolean;		private var attackTimer:Timer = new Timer(500,1);		public function Player()		{			trace("i am a player" );			// constructor code			isAttacking = false;			xMovement = 0;			addEventListener(Event.ENTER_FRAME, enterFrameHandler );		}		//enterframe 移動		private function enterFrameHandler(event:Event ):void		{			this.x +=  xMovement;		}		//attack function		public function attack()		{			isAttacking = true;			this.gotoAndStop("attack");			attackTimer.addEventListener(TimerEvent.TIMER_COMPLETE, doneAttacking);			attackTimer.start();		}		public function doneAttacking(event:TimerEvent):void		{			isAttacking = false;			this.gotoAndStop("stop");		}		// jump function		public function startJumping()		{			if (isJumping == false)			{				isJumping = true;				this.gotoAndStop("jump");				this.downwardVelocity = -20;			}		}		//moving status function		public function moveLeft():void		{			xMovement = -7;			this.scaleX = -0.4;			this.gotoAndStop("run");			isRunning = true;		}		public function moveRight():void		{			xMovement = 7;			this.scaleX = 0.4;			this.gotoAndStop("run");			isRunning = true;		}		public function standStill():void		{			xMovement = 0;			isRunning = false;		}		//animation status funciton		override public function positionOnLand()		{			isJumping = false;			if (isAttacking == true)			{				// do nothing 			}			else if (isRunning == true )			{				this.gotoAndStop("run");			}			else			{				this.gotoAndStop("stop");			}		}	}}