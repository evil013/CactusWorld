package com.dayvid.mvc.sound.music {	import com.dayvid.mvc.model.model_components.OptionsSettings;		import mvc_framework.sound.MusicList;	import com.dayvid.mvc.sound.music.music_components.Music;		import flash.display.MovieClip;	import flash.events.Event;
	import mvc_framework.sound.musicfactory.MusicProjectCreator;
	public class MusicPlayer	{		private var model:OptionsSettings;		private var currentMusicClass:Music = null;		private var currentMusic:uint;		private var musicPlaying:Boolean = false;		private var musicCreator:MusicCreator;				public function MusicPlayer(aModel:OptionsSettings, aEmbedSound:Object)		{			model = aModel;			musicCreator = new MusicProjectCreator(aModel, aEmbedSound);			currentMusic = MusicList.MUSIC_TOTAL_NUM;		}		//		public function deleteMusic():void		{			if (currentMusicClass != null) currentMusicClass.cleanUp();			currentMusic = MusicList.MUSIC_TOTAL_NUM;			currentMusicClass = null;		}		//		public function playMusic(aType:uint):void 		{			musicPlaying = true;						//trace("playMusic");			if (aType < MusicList.MUSIC_TOTAL_NUM) 			{				var deleteCurrentMusic:Boolean = false;								if (musicCreator.playDelete && !currentMusicClass.playing)				{					deleteCurrentMusic = true;				}				else if (aType != currentMusic) 				{					deleteCurrentMusic = true;				}								if (deleteCurrentMusic)				{					stopMusic();					deleteMusic();					currentMusic = aType;					currentMusicClass = musicCreator.createMusic(aType);				}								playTheMusic();			} 			else 			{				throw new Error("Invalid kind of Theme Music specified");			}		}		protected function playTheMusic():void 		{			musicPlaying = true;						if (currentMusic < MusicList.MUSIC_TOTAL_NUM) 			{				if (!model.musicMute) 				{					if (currentMusicClass != null) currentMusicClass.playMusic();				}			}		}		//		public function stopMusic():void 		{			musicPlaying = false;						muteMusic();		}				public function unMuteMusic():void 		{			if (musicPlaying) playTheMusic();		}		public function muteMusic():void		{			if (currentMusic < MusicList.MUSIC_TOTAL_NUM)			{				if (currentMusicClass != null) currentMusicClass.stopMusic();			}		}		//		public function setSoundTransform(aVol:Number = 1, aPan:Number = 0, aX:* = null):void 		{			if (currentMusic < MusicList.MUSIC_TOTAL_NUM) 			{				if (currentMusicClass != null) currentMusicClass.setSoundTransform(aVol, aPan, aX);			}		}	}}