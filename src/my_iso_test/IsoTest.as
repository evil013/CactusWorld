package my_iso_test{	import com.friendsofed.isometric.DrawnIsoBox;	import com.friendsofed.isometric.DrawnIsoTile;	import com.friendsofed.isometric.GraphicTile;	import com.friendsofed.isometric.IsoWorld;	import com.friendsofed.isometric.Point3D;	import com.friendsofed.isometric.MapLoader;	import com.friendsofed.isometric.IsoObject;		import flash.display.Sprite;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.events.Event;	import flash.events.KeyboardEvent;	import flash.ui.Keyboard;	import flash.display.Loader;	import flash.net.URLRequest;	import com.friendsofed.isometric.IsoObject;	import flash.display.MovieClip;		[SWF(backgroundColor=0xffffff)]	public class IsoTest extends Sprite	{		private var _world:IsoWorld;		private var _floor:IsoWorld;		private var world:IsoWorld;		private var mapLoader:MapLoader;						private var my_loader:Loader= new Loader();		private var image:URLRequest = new URLRequest("assets/cactus.png");				[Embed(source="../assets/tile_01.png")]		public var Tile01:Class;				[Embed(source="../assets/tile_02.png")]		public var Tile02:Class;				private var box:DrawnIsoBox;		private var speed:Number = 5;				public function IsoTest()		{			/*stage.align = StageAlign.TOP_LEFT;			stage.scaleMode = StageScaleMode.NO_SCALE;*/						mapLoader = new MapLoader(this);			mapLoader.addEventListener(Event.COMPLETE, onMapComplete);			mapLoader.loadMap("assets/map.txt");											}				private function init ():void		{// add box (character)			box = new DrawnIsoBox(20, 0xff0000, 20);			box.x = 200;			box.z = 200;			_world.addChildToWorld(box);				var my_loader:Loader = new Loader();			my_loader.load(new URLRequest("assets/cactus.png"));			my_loader.x= -27;			my_loader.y= -52;			box.addChild(my_loader);															addEventListener(Event.ENTER_FRAME, onEnterFrame);			stage.addEventListener(KeyboardEvent.KEY_DOWN, KeyDown);			stage.addEventListener(KeyboardEvent.KEY_UP, KeyUp);					}				private function onEnterFrame(event:Event):void		{			if(_world.canMove(box))			{				box.x += box.vx;				box.y += box.vy;				box.z += box.vz;			}			else			{//trace("HIT");			}			_world.sort();		}						private function onMapComplete(event:Event):void		{			// world load with map loader					_world = mapLoader.makeWorld(20);			_world.x = stage.stageWidth / 2;			_world.y = 100;			addChild(_world);						init();		}				private function KeyDown(event:KeyboardEvent):void		{						switch(event.keyCode)			{				case Keyboard.UP :				box.vx = -speed;				break;								case Keyboard.DOWN :				box.vx = speed;				break;								case Keyboard.LEFT :				box.vz = speed;				break;								case Keyboard.RIGHT :				box.vz = -speed;				break;								case 87 :				box.vx = -speed;				break;								case Keyboard.S :				box.vx = speed;				break;								case Keyboard.A :				box.vz = speed;				//trace("A");				break;								case 68 :				box.vz = -speed;				break;								default :				break;							}		}				private function KeyUp(event:KeyboardEvent):void		{			box.vx = 0;			box.vz = 0;		}			}}